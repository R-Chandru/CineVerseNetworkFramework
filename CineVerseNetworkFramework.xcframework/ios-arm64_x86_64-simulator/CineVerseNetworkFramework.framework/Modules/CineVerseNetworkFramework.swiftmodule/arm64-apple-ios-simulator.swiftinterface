// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios17.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CineVerseNetworkFramework
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import CineVerseNetworkFramework
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum NetworkError : Swift.Error {
  case invalidURL
  case noData
  case decodingError
  public static func == (a: CineVerseNetworkFramework.NetworkError, b: CineVerseNetworkFramework.NetworkError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public struct NetworkResponse<T> {
  public let data: T
  public let response: Foundation.URLResponse?
}
public enum CineVerseParamConstants {
}
public enum CineVerseAPI {
  case getLatestMovieList
  case getPopularMovieList
  case getMovieImage
  case getMovieDetail
  case getMovieDetailCredits
  case getMovieDetailKeywords
  public static func == (a: CineVerseNetworkFramework.CineVerseAPI, b: CineVerseNetworkFramework.CineVerseAPI) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public class CineVerseNetworkService : CineVerseNetworkFramework.CineVerseNetworkServiceProtocol {
  public init()
  public func request<T>(with api: CineVerseNetworkFramework.CineVerseAPI, requestID: Swift.String?, params: [Swift.String : Swift.String], completion: @escaping (Swift.Result<CineVerseNetworkFramework.NetworkResponse<T>, any Swift.Error>) -> Swift.Void) where T : Swift.Decodable
  public func requestImage(with api: CineVerseNetworkFramework.CineVerseAPI, path: Swift.String, completion: @escaping (Swift.Result<CineVerseNetworkFramework.NetworkResponse<UIKit.UIImage?>, any Swift.Error>) -> Swift.Void)
  @objc deinit
}
public protocol CineVerseNetworkServiceProtocol {
  func request<T>(with api: CineVerseNetworkFramework.CineVerseAPI, requestID: Swift.String?, params: [Swift.String : Swift.String], completion: @escaping (Swift.Result<CineVerseNetworkFramework.NetworkResponse<T>, any Swift.Error>) -> Swift.Void) where T : Swift.Decodable
  func requestImage(with api: CineVerseNetworkFramework.CineVerseAPI, path: Swift.String, completion: @escaping (Swift.Result<CineVerseNetworkFramework.NetworkResponse<UIKit.UIImage?>, any Swift.Error>) -> Swift.Void)
}
extension CineVerseNetworkFramework.NetworkError : Swift.Equatable {}
extension CineVerseNetworkFramework.NetworkError : Swift.Hashable {}
extension CineVerseNetworkFramework.CineVerseAPI : Swift.Equatable {}
extension CineVerseNetworkFramework.CineVerseAPI : Swift.Hashable {}
